---
- hosts: yyz
  gather_facts: yes
  vars:
    nodejs_version: "v16.18.0"
    nodejs_download_url: "https://nodejs.org/dist/{{ nodejs_version }}/node-{{ nodejs_version }}-linux-x64.tar.xz"
    nodejs_install_dir: "{{ ansible_env.HOME }}/.local/bin"
    nvim_config_source_dir: "configuration/.config/nvim"
    nvim_config_dest_dir: "{{ ansible_env.HOME }}/.config"
    pybuda_git_url: "git@yyz-gitlab.local.tenstorrent.com:tenstorrent/pybuda.git"
  tasks:
    - name: Install NodeJS
      tags: node
      block:
        - name: Download NodeJS
          get_url:
            url: "{{ nodejs_download_url }}"
            dest: "/tmp/node-{{ nodejs_version }}-linux-x64.tar.xz"

        - name: Create NodeJS install directory
          file:
            path: "{{ nodejs_install_dir }}"
            state: directory

        - name: Remove old verison of node NodeJS tarball
          file:
            path: "{{ nodejs_install_dir }}/node"
            state: absent

        - name: Extract NodeJS
          unarchive:
            src: "/tmp/node-{{ nodejs_version }}-linux-x64.tar.xz"
            dest: "{{ ansible_env.HOME }}/.local"
            remote_src: yes
            extra_opts: [--strip-components=1]

        - name: Cleanup NodeJS tarball
          file:
            path: "/tmp/node-{{ nodejs_version }}-linux-x64.tar.xz"
            state: absent

        - name: Add NodeJS to PATH in .bashrc
          lineinfile:
            path: "{{ ansible_env.HOME }}/.bashrc"
            line: 'export PATH="$PATH:{{ nodejs_install_dir }}"'
            create: yes

    - name: Install Neovim
      tags: nvim
      block:
        - name: Check if NodeJS is installed
          command: which node
          changed_when: no
          check_mode: no

        - name: Create local directory for Neovim
          file:
            path: "{{ ansible_env.HOME }}/.local"
            state: directory

        - name: Download Neovim
          get_url:
            url: https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
            dest: "/tmp/nvim-linux64.tar.gz"

        - name: Extract Neovim
          unarchive:
            src: "/tmp/nvim-linux64.tar.gz"
            dest: "{{ ansible_env.HOME }}/.local"
            remote_src: yes
            extra_opts: [--strip-components=1]

        - name: Cleanup Neovim tarball
          file:
            path: "/tmp/nvim-linux64.tar.gz"
            state: absent

        - name: Create config directory for Neovim
          file:
            path: "{{ ansible_env.HOME }}/.config"
            state: directory

        - name: Synchronize configuration files
          ansible.posix.synchronize:
            src: "{{ nvim_config_source_dir }}"
            dest: "{{ nvim_config_dest_dir }}"
            delete: yes
            recursive: yes
            compress: yes

        - name: Install Neovim plugins
          ansible.builtin.shell: nvim --headless "+Lazy! sync" +qa


    - name: Setup development environment
      tags: dev
      block:
        - name: Create /localdev
          file:
            path: "/localdev/{{ ansible_user_id }}"
            state: directory
        - name: Create /proj_sw/user_dev directory
          file:
            path: "/proj_sw/user_dev/{{ ansible_user_id }}/src"
            state: directory
        - name: Create a symbolic link
          ansible.builtin.file:
            src: "/proj_sw/user_dev/{{ ansible_user_id }}/src"
            dest: "/home/{{ ansible_user_id }}/src"
            state: link

    - name: Clone PyBuda
      tags: pybuda
      block:
        - name: Create PyBuda parent directory
          file:
            path: "/localdev/{{ ansible_user_id }}/pybuda"
            state: directory
        - name: Clone PyBuda into /localdev/{{ ansible_user_id }}
          ansible.builtin.git:
            repo: "git@yyz-gitlab.local.tenstorrent.com:tenstorrent/pybuda.git"
            dest: "/localdev/{{ ansible_user_id }}/pybuda"
            single_branch: yes
            version: main
            update: no
            recursive: yes
        

  environment:
    PATH: "/usr/bin:{{ ansible_env.PATH }}"

